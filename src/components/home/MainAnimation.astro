---
import car from "@/assets/car.png";
import Apex from "@/assets/apex.svg";
import { Image } from "astro:assets";
import Header from "../Header.astro";
---

<div class="h-screen overflow-hidden relative">
	<Header />
	<div
		class="flex flex-col items-center justify-center gap-4 h-full absolute inset-0 w-full"
	>
		<img src={car.src} alt="car" class="absolute opacity-0" id="animated-left" />
		<Apex
			class="text-white max-w-lg animate-fade-in delay-1000 opacity-0"
			id="animated-apex"
		/>
		<img src={car.src} alt="car" class="absolute opacity-0" id="animated-right" />
	</div>
</div>
<script>
	const elemLeft = document.getElementById("animated-left")!;
	const elemRight = document.getElementById("animated-right")!;
	const elemApex = document.getElementById("animated-apex")!;
	elemLeft.style.opacity = "1";
	elemRight.style.opacity = "1";

	const updatePositions = (reload: boolean = false) => {
		const leftProps = elemLeft.getBoundingClientRect();
		const rightProps = elemRight.getBoundingClientRect();
		const apexProps = elemApex.getBoundingClientRect();

		elemLeft.style.top = `${apexProps.top - leftProps.height - 32}px`;
		elemRight.style.top = `${apexProps.bottom + 32}px`;

		elemLeft.style.left = `${-leftProps.width}px`;
		elemRight.style.left = `${window.innerWidth + rightProps.width}px`;

		const deltaXLeft = window.innerWidth / 2 + leftProps.width / 2;
		const deltaXRight = -window.innerWidth / 2 - (rightProps.width * 3) / 2;

		elemLeft.style.transition = reload
			? "transform 0s ease-in-out"
			: "transform 1s ease-in-out";
		elemLeft.style.transform = `translateX(${deltaXLeft}px)`;
		elemRight.style.transition = reload
			? "transform 0s ease-in-out"
			: "transform 1s ease-in-out";
		elemRight.style.transform = `translateX(${deltaXRight}px)`;
	};

	document.addEventListener("DOMContentLoaded", () => {
		updatePositions();
	});

	window.addEventListener("resize", () => updatePositions(true));
</script>
