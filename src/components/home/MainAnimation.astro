---
import carLeft from "@/assets/car-left.png";
import carRight from "@/assets/car-right.png";
import Apex from "@/assets/apex.svg";
import Header from "../Header.astro";
import draftLeft from "@/assets/draft-left.png";
import draftRight from "@/assets/draft-right.png";
---

<div class="h-screen overflow-hidden relative">
	<div class="absolute inset-0 z-20">
		<Header />
	</div>
	<div
		class="flex flex-col items-center justify-center h-full absolute inset-0 w-full"
	>
		<img
			src={carLeft.src}
			alt="car"
			class="absolute opacity-0 h-12 sm:h-auto"
			id="animated-car-left"
		/>
		<img
			src={draftLeft.src}
			alt="draft"
			class="absolute opacity-0 h-6 sm:h-12"
			id="animated-draft-left"
		/>
		<Apex
			class="text-white max-w-lg h-auto px-8 w-full animate-fade-in delay-1000 opacity-0 py-24"
			id="animated-apex"
		/>
		<img
			src={carRight.src}
			alt="car"
			class="absolute opacity-0 h-12 sm:h-auto"
			id="animated-car-right"
		/>
		<img
			src={draftRight.src}
			alt="draft"
			class="absolute opacity-0 h-6 sm:h-12"
			id="animated-draft-right"
		/>
	</div>
</div>
<script>
	const carLeft = document.getElementById("animated-car-left")!;
	const carRight = document.getElementById("animated-car-right")!;
	const draftLeft = document.getElementById("animated-draft-left")!;
	const draftRight = document.getElementById("animated-draft-right")!;
	const apex = document.getElementById("animated-apex")!;
	carLeft.style.opacity = "1";
	carRight.style.opacity = "1";
	draftLeft.style.opacity = "1";
	draftRight.style.opacity = "1";

	const updatePositions = (reload: boolean = false) => {
		const carLeftProps = carLeft.getBoundingClientRect();
		const carRightProps = carRight.getBoundingClientRect();
		const draftLeftProps = draftLeft.getBoundingClientRect();
		const draftRightProps = draftRight.getBoundingClientRect();
		const apexProps = apex.getBoundingClientRect();

		const carLeftTop = apexProps.top - carLeftProps.height;
		const carLeftVerticalCenter = carLeftTop + carLeftProps.height / 2;
		const carRightTop = apexProps.bottom;
		const carRightVerticalCenter = carRightTop + carRightProps.height / 2;

		const draftLeftTop = carLeftVerticalCenter - draftLeftProps.height / 2;
		const draftRightTop = carRightVerticalCenter - draftRightProps.height / 2;

		carLeft.style.top = `${carLeftTop}px`;
		carRight.style.top = `${carRightTop}px`;
		draftLeft.style.top = `${draftLeftTop}px`;
		draftRight.style.top = `${draftRightTop}px`;

		carLeft.style.left = `${-carLeftProps.width}px`;
		carRight.style.left = `${window.innerWidth + carRightProps.width}px`;
		draftLeft.style.left = `${-draftLeftProps.width - carLeftProps.width}px`;
		draftRight.style.left = `${window.innerWidth + 2 * carRightProps.width}px`;

		const deltaXLeft = window.innerWidth / 2 + carLeftProps.width / 2;
		const deltaXRight = -window.innerWidth / 2 - (carRightProps.width * 3) / 2;

		carLeft.style.transition = reload
			? "transform 0s ease-in-out"
			: "transform 1s ease-in-out";
		carLeft.style.transform = `translateX(${deltaXLeft}px)`;
		carRight.style.transition = reload
			? "transform 0s ease-in-out"
			: "transform 1s ease-in-out";
		carRight.style.transform = `translateX(${deltaXRight}px)`;
		draftLeft.style.transition = reload
			? "transform 0s ease-in-out"
			: "transform 1s ease-in-out";
		draftLeft.style.transform = `translateX(${deltaXLeft}px)`;
		draftRight.style.transition = reload
			? "transform 0s ease-in-out"
			: "transform 1s ease-in-out";
		draftRight.style.transform = `translateX(${deltaXRight}px)`;
	};

	document.addEventListener("DOMContentLoaded", () => {
		updatePositions();
	});

	window.addEventListener("resize", () => updatePositions(true));
</script>
