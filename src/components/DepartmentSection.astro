---
import MemberCard from "./MemberCard.astro";
import MemberTile from "./MemberTile.astro";
type Department = "board" | "chassis" | "aerodynamics" | "powertrain" | "electronics" | "it" | "graphics" | "business" | "cost";

interface Props {
  department: Department;
  title: string;
  members: Member[];
}

const { title, department, members } = Astro.props as Props;

const departmentStyles: Record<Department, { text: string; bg: string }> = {
  board: { text: "text-white", bg: "bg-white" },
  chassis: { text: "text-purple", bg: "bg-purple" },
  aerodynamics: { text: "text-cyan", bg: "bg-cyan" },
  powertrain: { text: "text-red", bg: "bg-red" },
  electronics: { text: "text-pink", bg: "bg-pink" },
  it: { text: "text-orange", bg: "bg-orange" },
  graphics: { text: "text-green", bg: "bg-green" },
  business: { text: "text-blue", bg: "bg-blue" },
  cost: { text: "text-blue", bg: "bg-blue" },
};

const styles = departmentStyles[department];
---

<div class="px-8 sm:min-h-screen py-8">
  <div class="flex items-center gap-4 mb-8">
    <h2 class={`uppercase ${styles.text} font-primary text-3xl sm:text-5xl`}>{title}</h2>
    {
      department === "board" ? (
        <div class="grow">
          <div class="h-2 bg-purple" />
          <div class="h-2 bg-cyan" />
          <div class="h-2 bg-red" />
        </div>
      ) : (
        <div class={`grow h-6 ${styles.bg}`} />
      )
    }
  </div>
  <div class="grow gap-8 hidden sm:flex">
    <div class="grow"></div>
    <div class="grid grid-cols-3 md:grid-cols-4 gap-4 grid-right">
      {members.map((member) => <MemberCard member={member} />)}
    </div>
  </div>
  <div class="sm:hidden flex flex-col gap-4">
    {members.map((member) => {
      return (
        <div class="flex gap-8 items-center">
          <MemberTile member={member} />
          <div>
            <h3 class="text-lg font-semibold text-white">{member.name}</h3>
            <div class="flex justify-around"></div>
          </div>
        </div>
      );
    })}
  </div>
</div>
